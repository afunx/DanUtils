plugins {
    id 'com.android.library'
}

android {

    def sdk = rootProject.ext.sdk

    compileSdk sdk.compileSdkVersion

    defaultConfig {

        minSdk sdk.minSdkVersion
        targetSdk sdk.targetSdkVersion

        def versions = rootProject.ext.versions

        versionCode versions.appVersionCode
        versionName versions.appVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {

        debug {
            buildConfigField "String", "VERSION_NAME", "\"${rootProject.ext.versions.appVersionName}\""
        }

        release {
            buildConfigField "String", "VERSION_NAME", "\"${rootProject.ext.versions.appVersionName}\""
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.test:rules:1.3.0'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

task makeAar(type: Copy) {
    delete 'libs/utils-debug.aar'
    delete 'libs/utils-release.aar'
    from ('build/outputs/aar/')
    into ('libs/')
}

makeAar.dependsOn(build)

task moveAar(type: Copy) {
    from ('libs/utils-release.aar')
    into ('../app/libs/')
    rename ('utils-release.aar', "dan-utils-${rootProject.ext.versions.appVersionName}.aar")
}

moveAar.dependsOn(makeAar)